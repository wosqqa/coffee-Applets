<template>
  <view class="info">
    <view class="header">
      <view class="header_content">
        <view class="nickName {{topActive==1 ? 'active':''}}" data-id='1' @tap="selectTab">我的心愿</view>
        <view class="nickName  {{topActive==2 ? 'active':''}}"  data-id='2'  @tap="selectTab">赠与记录</view>
      </view>
    </view>
    <view class="info_block" wx:if="{{topActive==1}}" wx:for="{{recordList.itemList}}" wx:key="key"  >
      <navigator class="item" url="/pages/wish_coffee">
        <view class="item_content">
          <view class="title">{{item.saleGoodsName}}</view>
          <view class="price">￥{{item.needGrowCafe}}</view>
          <view class="time">{{item.created}}</view>
        </view>
        <view class="arrow" wx:if="{{item.status==400}}">已过期</view>
        <view class="arrow" wx:else>待支付</view>
      </navigator>
    </view>
    <view class="info_block" wx:if="{{topActive==2}}" wx:for="{{assistList.itemList}}" wx:key="key"  >
      <navigator class="item" url="/pages/wish_coffee">
        <view class="item_content">
          <view class="title">{{item.saleGoodsName}}</view>
          <view class="price">￥{{item.needGrowCafe}}</view>
          <view class="time">{{item.created}}</view>
        </view>
        <view class="arrow" wx:if="{{item.status==400}}">已过期</view>
        <view class="arrow" wx:else>待支付</view>
      </navigator>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy';
import api from '@/api/api';
import {
  USER_INFO,USER_SPECICAL_INFO
} from '@/utils/constant';
export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '心愿记录',
  }
  components = {

  }

  data = {
    topActive:'1',
    avatarUrl: "",
    recordList:'',
    assistList:'',
    nickName: "",
    bShowBind:true
  }
  // async getUserInfo(phone,code) {
  //   let that = this;
  //   let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
  //   let openId = userSpecialInfo.openid;
  //   const json = await api.getUserInfo({
  //     query: {
  //       openId: openId
  //     }
  //   });

  //   if (json.data.code == 0) {
  //     if (json.data.user.mobile.length>0) {
  //       this.bShowBind=false;
  //     } else {
  //       this.bShowBind = true;
  //     }
  //     that.$apply();
  //   } else {
  //     tip.error(json.data.msg)
  //   }
  //   that.showLoading = false;
  // }

  onLoad(options) {
    let that = this;
    console.log(options)
    that.getRecordList();
  }
  onShow(){
    let that = this;
  }
  computed = {

  }
  async getRecordList() {
    let that = this;
    const json = await api.recordList({
      query: {
        page:1,
        page_size:10,
        client_session_key:'cfdddb4be1aa44ce8f7d76b46b180fa0'
      }
    });
    if (json.data.code == 200) {
      console.log(json.data);
      that.recordList=json.data.data.recordList
      // that.oldListActivityVo=json.data.data.oldListActivityVo
      console.log(that.goodsDeatil);
    } else {
      tip.error(json.data.message)
    }
    that.$apply();
  }
  async getAssistList() {
    let that = this;
    const json = await api.assistList({
      query: {
        page:1,
        page_size:10,
        client_session_key:'cfdddb4be1aa44ce8f7d76b46b180fa0'
      }
    });
    if (json.data.code == 200) {
      console.log(json.data);
      that.assistList=json.data.data.assistantList
      // that.oldListActivityVo=json.data.data.oldListActivityVo
      console.log(that.goodsDeatil);
    } else {
      tip.error(json.data.message)
    }
    that.$apply();
  }
  methods = {
    selectTab(e) {//tab点击
    let that = this;
    console.log(e.currentTarget.dataset.id)
      that.topActive = e.currentTarget.dataset.id
      if(that.topActive ==1){
        that.getRecordList();
      }else{
        that.getAssistList();
      }
    },
  }
  events = {

  }
}

</script>
<style lang="less">
.header {
  height: 110rpx;
  width: 100%;
  .header_content {
    width: 100%;
    height: 110rpx;
    margin: 0 auto;
    text-align: center;
    padding: 18rpx 0;
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-around;
    .active{
      color: #ff9500;
      margin-bottom: 30rpx;
    }
    .active::before{
      content: '';
      position: absolute;
      text-align: center;
      margin-left: 38rpx;
      top: 100rpx;
      width: 50rpx;
      height: 4rpx;
      background-color: #ff9500;
    }
    .nickName {
      font-size: 30rpx;
      line-height:70rpx;
    }
  }
}



.avatarUrl {
  width: 122rpx;
  height: 122rpx;
  border-radius: 1000px;
}



.info_block {
  height: 200rpx;
  .item {
    background: #fff;
    padding: 30rpx 40rpx;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  .item:last-child {
    border-bottom: 1rpx solid #dbdbdb;
  }
  .item_content {
    display: flex;
    flex-flow: column nowrap;
    align-items: left;
    .title{
      font-weight: 600;
      font-size: 36rpx;
      color: #000;
    }
    .price{
      font-weight: 600;
      font-size: 36rpx;
      color: #000;
    }
    .time{
      color: #cccccc;
    }
  }
  .arrow {
    color: #cccccc;
    font-size: 32rpx;
  }
  .tip {
    color: #999;
    font-size: 24rpx;
    margin-top: 20rpx;
    margin-left: 60rpx;
  }
}

</style>
